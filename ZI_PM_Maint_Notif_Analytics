@AbapCatalog.sqlViewName: 'ZIPMMAINTNOTIFAN'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: 'CDS View for Maint. Notif - Analytics'

@Analytics.dataCategory: #DIMENSION
@VDM.viewType: #BASIC
define view ZI_PM_Maint_Notif_Analytics
as select from qmih 
{
  key qmih.qmnum                                                                                                                             as MaintenanceNotification,
      qmih.equnr                                                                                                                             as Equipment,
      qmih.iloan                                                                                                                             as MaintObjectLocAcctAssgmtNmbr,
      qmih.maueh                                                                                                                             as MaintObjDowntimeDurationUnit,
      --Malfunction Date
      qmih.ausvn                                                                                                                             as MalfunctionStartDate,
      qmih.ausbs                                                                                                                             as MalfunctionEndDate,
      qmih.auztv                                                                                                                             as MalfunctionStartTime,
      qmih.auztb                                                                                                                             as MalfunctionEndTime,

      CONCAT_WITH_SPACE(CONCAT(CONCAT(Concat(substring(qmih.ausvn, 7, 2), '/' ) , CONCAT(substring(qmih.ausvn, 5, 2) , '/')), substring(qmih.ausvn, 1, 4)),
      CONCAT(CONCAT(Concat(substring(qmih.auztv, 1, 2), ':' ) , CONCAT(substring(qmih.auztv, 3, 2) , ':')), substring(qmih.auztv, 5, 2)), 1) as MalfStartDateTime,

      CONCAT_WITH_SPACE(CONCAT(CONCAT(Concat(substring(qmih.ausbs, 7, 2), '/' ) , CONCAT(substring(qmih.ausbs, 5, 2) , '/')), substring(qmih.ausbs, 1, 4)),
      CONCAT(CONCAT(Concat(substring(qmih.auztb, 1, 2), ':' ) , CONCAT(substring(qmih.auztb, 3, 2) , ':')), substring(qmih.auztb, 5, 2)), 1) as MalfEndDateTime,

      case
         when ( qmih.ausvn != '00000000' and qmih.auztv != '000000' ) and
              ( qmih.ausbs != '00000000' and qmih.auztb != '000000' )
            then
              CONCAT(CONCAT(cast(cast(DIV(tstmp_seconds_between( dats_tims_to_tstmp( qmih.ausvn, qmih.auztv ,
               abap_system_timezone( $session.client,'NULL' ),
               $session.client,
               'NULL' ),  dats_tims_to_tstmp( qmih.ausbs, qmih.auztb ,
               abap_system_timezone( $session.client,'NULL' ),
               $session.client,
               'NULL' ), 'FAIL' ), 3600 ) as abap.int8 ) as abap.char(25)), ':' )          ,

               CONCAT(CONCAT(LPAD(cast(DIV(MOD(CEIL(tstmp_seconds_between( dats_tims_to_tstmp( qmih.ausvn, qmih.auztv ,
                abap_system_timezone( $session.client,'NULL' ),
                $session.client,
               'NULL' ),  dats_tims_to_tstmp( qmih.ausbs, qmih.auztb ,
                abap_system_timezone( $session.client,'NULL' ),
                $session.client,
               'NULL' ), 'FAIL' ) ), 3600 ), 60)  as abap.char(25)), 2, '0'), ':' ) ,

              LPAD(cast(MOD(MOD(CEIL(tstmp_seconds_between( dats_tims_to_tstmp( qmih.ausvn, qmih.auztv ,
               abap_system_timezone( $session.client,'NULL' ),
               $session.client,
               'NULL' ),  dats_tims_to_tstmp( qmih.ausbs, qmih.auztb ,
               abap_system_timezone( $session.client,'NULL' ),
               $session.client,
               'NULL' ), 'FAIL' ) ), 3600 ), 60)  as abap.char(25)), 2, '0')))
         else 'N/A'
      end

                                                                                                                                             as MalfunctionDifference,

      case
        when ( qmih.ausvn != '00000000' and qmih.auztv != '000000' ) and
             ( qmih.ausbs != '00000000' and qmih.auztb != '000000' )
           then
              division(tstmp_seconds_between( dats_tims_to_tstmp( qmih.ausvn, qmih.auztv ,
                  abap_system_timezone( $session.client,'NULL' ),
                  $session.client,
                 'NULL' ),  dats_tims_to_tstmp( qmih.ausbs, qmih.auztb ,
                  abap_system_timezone( $session.client,'NULL' ),
                  $session.client,
                 'NULL' ), 'FAIL' ), 3600, 2)
        else 0.00
      end                                                                                                                                    as MalfDifferenceInHours
}
